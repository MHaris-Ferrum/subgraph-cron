type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AdminSet @entity(immutable: true) {
  id: Bytes!
  admin: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FinalizedBlock @entity(immutable: true) {
  id: Bytes!
  remoteChainId: BigInt! # uint256
  blockNonce: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FinalizedInvalidBlock @entity(immutable: true) {
  id: Bytes!
  remoteChainId: BigInt! # uint256
  blockNonce: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FinalizedSnapshot @entity(immutable: true) {
  id: Bytes!
  remoteChainId: BigInt! # uint256
  startBlockNonce: BigInt! # uint256
  endBlockNonce: BigInt! # uint256
  finalizers: [Bytes!]! # address[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LocalBlockCreated @entity(immutable: true) {
  id: Bytes!
  remoteChainId: BigInt! # uint64
  nonce: BigInt! # uint64
  timestamp: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MinedBlockCreated @entity(immutable: true) {
  id: Bytes!
  blockHash: Bytes! # bytes32
  miner: Bytes! # address
  stake: BigInt! # uint256
  totalValue: BigInt! # uint256
  blockMetadata_chainId: BigInt! # uint64
  blockMetadata_nonce: BigInt! # uint64
  blockMetadata_timestamp: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RemoteTransactionRegistered @entity(immutable: true) {
  id: Bytes!
  timestamp: BigInt! # uint64
  remoteContract: Bytes! # address
  sourceMsgSender: Bytes! # address
  sourceBeneficiary: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  method: Bytes! # bytes
  gas: BigInt! # uint256
  fixedFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type QuantumPortalLedgerMgrImplUpgradeableUpgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
